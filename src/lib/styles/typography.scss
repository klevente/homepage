@font-face {
  font-family: "Merriweather";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/merriweather-v30-latin-ext_latin-regular.woff2") format("woff2"),
    url("/fonts/merriweather-v30-latin-ext_latin-regular.woff") format("woff"),
    url("/fonts/merriweather-v30-latin-ext_latin-regular.ttf") format("truetype");
}

@font-face {
  font-family: "Merriweather";
  font-style: italic;
  font-weight: 400;
  src: url("/fonts/merriweather-v30-latin-ext_latin-italic.woff2") format("woff2"),
    url("/fonts/merriweather-v30-latin-ext_latin-italic.woff") format("woff"),
    url("/fonts/merriweather-v30-latin-ext_latin-italic.ttf") format("truetype");
}

@font-face {
  font-family: "Merriweather";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/merriweather-v30-latin-ext_latin-700.woff2") format("woff2"),
    url("/fonts/merriweather-v30-latin-ext_latin-700.woff") format("woff"),
    url("/fonts/merriweather-v30-latin-ext_latin-700.ttf") format("truetype");
}

@font-face {
  font-family: "Merriweather";
  font-style: italic;
  font-weight: 700;
  src: url("/fonts/merriweather-v30-latin-ext_latin-700italic.woff2") format("woff2"),
    url("/fonts/merriweather-v30-latin-ext_latin-700italic.woff") format("woff"),
    url("/fonts/merriweather-v30-latin-ext_latin-700italic.ttf") format("truetype");
}

@font-face {
  font-family: "Fira Sans";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/fira-sans-v16-latin-ext_latin-regular.woff2") format("woff2"),
    url("/fonts/fira-sans-v16-latin-ext_latin-regular.woff") format("woff"),
    url("/fonts/fira-sans-v16-latin-ext_latin-regular.ttf") format("truetype");
}

@font-face {
  font-family: "Fira Sans";
  font-style: italic;
  font-weight: 400;
  src: url("/fonts/fira-sans-v16-latin-ext_latin-italic.woff2") format("woff2"),
    url("/fonts/fira-sans-v16-latin-ext_latin-italic.woff") format("woff"),
    url("/fonts/fira-sans-v16-latin-ext_latin-italic.ttf") format("truetype");
}

@font-face {
  font-family: "Fira Sans";
  font-style: normal;
  font-weight: 700;
  src: url("/fonts/fira-sans-v16-latin-ext_latin-700.woff2") format("woff2"),
    url("/fonts/fira-sans-v16-latin-ext_latin-700.woff") format("woff"),
    url("/fonts/fira-sans-v16-latin-ext_latin-700.ttf") format("truetype");
}

@font-face {
  font-family: "Fira Sans";
  font-style: italic;
  font-weight: 700;
  src: url("/fonts/fira-sans-v16-latin-ext_latin-700italic.woff2") format("woff2"),
    url("/fonts/fira-sans-v16-latin-ext_latin-700italic.woff") format("woff"),
    url("/fonts/fira-sans-v16-latin-ext_latin-700italic.ttf") format("truetype");
}

@font-face {
  font-family: "Fira Code";
  font-style: normal;
  font-weight: 400;
  src: url("/fonts/fira-code-v21-latin-ext_latin-regular.woff2") format("woff2"),
    url("/fonts/fira-code-v21-latin-ext_latin-regular.woff") format("woff"),
    url("/fonts/fira-code-v21-latin-ext_latin-regular.ttf") format("truetype");
}

@font-face {
  font-family: "Fira Code";
  font-style: normal;
  font-weight: 600;
  src: url("/fonts/fira-code-v21-latin-ext_latin-600.woff2") format("woff2"),
    url("/fonts/fira-code-v21-latin-ext_latin-600.woff") format("woff"),
    url("/fonts/fira-code-v21-latin-ext_latin-600.ttf") format("truetype");
}

:root {
  --font-serif: "Merriweather", serif;
  --font-sans: "Fira Sans", sans-serif;
  --font-mono: "Fira Code", monospace;
  --font-size-body: 1rem;
  --font-size-mono: 0.938rem;
}

body {
  font-family: var(--font-serif);
  font-size: var(--font-size-body);
  line-height: 1.5rem;
}

h1,
h2,
h3,
h4,
h5,
h6,
header,
footer,
time {
  font-family: var(--font-sans);
}

article h1 {
  font-size: 2em;
}

time {
  font-family: var(--font-mono);
  font-size: var(--font-size-mono);
}

a {
  color: unset;
}

li {
  overflow-wrap: break-word;
}

pre,
code {
  line-height: initial;
  hyphens: none;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  tab-size: 2;

  text-shadow: none;
  font-family: var(--font-mono);
  font-style: normal;
  font-size: var(--font-size-mono);

  direction: ltr;
  text-align: left;
  word-spacing: normal;
  // might need this at some point
  // word-break: break-word;
}

/* inline code */
:not(pre) > code {
  &:before {
    content: "`";
  }

  &:after {
    content: "`";
  }
}
